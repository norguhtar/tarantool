test_run = require('test_run').new()
---
...
engine = test_run:get_cfg('engine')
---
...
box.execute('pragma sql_default_engine=\''..engine..'\'')
---
- row_count: 0
...
-- These tests check that SQL savepoints properly work outside
-- transactions as well as inside transactions started in Lua.
-- gh-3313
--
box.execute('SAVEPOINT t1;');
---
- error: Can not set a savepoint in absence of active transaction
...
box.execute('RELEASE SAVEPOINT t1;');
---
- error: Can not set a savepoint in absence of active transaction
...
box.execute('ROLLBACK TO SAVEPOINT t1;');
---
- error: Can not set a savepoint in absence of active transaction
...
box.begin() box.execute('SAVEPOINT t1;') box.execute('RELEASE SAVEPOINT t1;') box.commit();
---
...
box.begin() box.execute('SAVEPOINT t1;') box.execute('ROLLBACK TO t1;') box.commit();
---
...
box.begin() box.execute('SAVEPOINT t1;') box.commit();
---
...
box.commit();
---
...
-- These tests check that release of SQL savepoints works as desired.
-- gh-3379
test_run:cmd("setopt delimiter ';'")
---
- true
...
release_sv = function()
    box.begin()
    box.execute('SAVEPOINT t1;')
    box.execute('RELEASE SAVEPOINT t1;')
end;
---
...
release_sv();
---
...
box.commit();
---
...
release_sv_fail = function()
    box.begin()
    box.execute('SAVEPOINT t1;')
    box.execute('SAVEPOINT t2;')
    box.execute('RELEASE SAVEPOINT t2;')
    box.execute('RELEASE SAVEPOINT t1;')
    box.execute('ROLLBACK TO t1;')
end;
---
...
release_sv_fail();
---
- error: 'Failed to execute SQL statement: no such savepoint: T1'
...
box.commit();
---
...
